/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wang.mymailsender.ui;

import com.wang.mymailsender.data.Contact;
import com.wang.mymailsender.data.ContactList;
import com.wang.mymailsender.data.LoginUserInfo;
import com.wang.mymailsender.utils.MailUtil;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Allan
 */
public class MailSenderFrame extends javax.swing.JFrame  implements ActionListener, MouseListener{

    private final Dimension dim;
    /**
     * Creates new form MailSenderPanel
     */
    public MailSenderFrame() {
        this.dim = Toolkit.getDefaultToolkit().getScreenSize();
        initComponents();
        contactList = new ContactList();
        initContactTable(contactList);
    }

    public MailSenderFrame(LoginUserInfo userInfo) {
        loginUser = userInfo;
        this.dim = Toolkit.getDefaultToolkit().getScreenSize();
        initComponents();
        contactList = new ContactList();
        initContactTable(contactList);
    }

    public void initContactTable(ContactList list){
        this.tbl_contactPerson.setToolTipText("Right Click to Edit Contact Info.");
        this.tbl_contactPerson.setModel(new ContactPersonTableModel(list));
        this.tbl_contactPerson.addMouseListener(this);
        this.tbl_contactPerson.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        popupMenu = new JPopupMenu();
        popUpDelEntry = new JMenuItem("Delete the selected Contact");
        popUpDelEntry.addActionListener(this);
        popUpAddEntry = new JMenuItem("Add New Contact");
        popUpAddEntry.addActionListener(this);
        popupMenu.add(popUpAddEntry);
        popupMenu.addSeparator();
        popupMenu.add(popUpDelEntry);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_contactPerson = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btn_preview = new javax.swing.JButton();
        btn_sendMail = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textArea_logs = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea_mailBody = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        textField_prefix = new javax.swing.JTextField();
        combox_appellation = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        textField_subject = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Mail Sender");
        setName("frame_mailSender"); // NOI18N

        jSplitPane1.setDividerSize(4);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Person"));

        tbl_contactPerson.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tbl_contactPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tbl_contactPerson);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail"));

        btn_preview.setText("Preview");
        btn_preview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_previewActionPerformed(evt);
            }
        });

        btn_sendMail.setText("Send to Each Person");
        btn_sendMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendMailActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail Sending Logs"));

        textArea_logs.setEditable(false);
        textArea_logs.setColumns(20);
        textArea_logs.setRows(5);
        jScrollPane3.setViewportView(textArea_logs);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail Body"));

        textArea_mailBody.setColumns(20);
        textArea_mailBody.setLineWrap(true);
        textArea_mailBody.setRows(5);
        jScrollPane2.setViewportView(textArea_mailBody);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail Header"));

        textField_prefix.setText("Dear");

        combox_appellation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Name", "Last Name" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(textField_prefix, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combox_appellation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(textField_prefix)
                .addComponent(combox_appellation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setText("Subject: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btn_preview)
                .addGap(18, 18, 18)
                .addComponent(btn_sendMail)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField_subject)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_preview)
                    .addComponent(btn_sendMail))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField_subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sendMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendMailActionPerformed
        // TODO add your handling code here:
        HashMap<String,Contact> map = contactList.getContactList();
        ContactPersonTableModel tableModel = (ContactPersonTableModel)this.tbl_contactPerson.getModel();
        ArrayList<Integer> enableList = tableModel.getEnableList();
        String subject = this.textField_subject.getText();
        String mailHeader = this.textField_prefix.getText();
        String mailBody = this.textArea_mailBody.getText();
        for(int i = 0; i < enableList.size(); i++){
            Contact c = map.get(map.keySet().toArray()[enableList.get(i)]);
            if(0 == this.combox_appellation.getSelectedIndex()){
                mailHeader += " "+c.getFirstName()+" ,";
            }else {
                mailHeader += " "+c.getLastName()+" ,";
            }
            mailHeader += System.getProperty("line.separator");
            MailUtil mailUtil = new MailUtil();
            mailUtil.setFromAddress(loginUser.getUser());
            mailUtil.setUserName(loginUser.getUser());
            mailUtil.setPassword(loginUser.getPassword());
            mailUtil.setMailMessageAsHtmlText(false);
            mailUtil.setSmtpHostName(loginUser.getSmtpServer());
            mailUtil.setSsl(false);
            mailUtil.setSendTo(c.getEmail());
            mailUtil.setSmtpPort(MailUtil.NOT_SSL_PORT);
            String tmpLog = this.textArea_logs.getText();
            tmpLog += System.getProperty("line.separator");
            try {
                mailUtil.sendMail(subject,mailHeader + mailBody);
                tmpLog += new Date().toString() + "    Sent to " + c.getEmail() + "Successful!";
                this.textArea_logs.setText(tmpLog);
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
                tmpLog += new Date().toString() + "    Failed to " + c.getEmail() + "! ";
                tmpLog += e.getMessage();
                this.textArea_logs.setText(tmpLog);
//                JOptionPane.showMessageDialog(null, "Failed to send mail to " + c.getEmail(),
//                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btn_sendMailActionPerformed

    private void btn_previewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_previewActionPerformed
        // TODO add your handling code here:
                /* Create and display the form */
        HashMap<String,Contact> map = contactList.getContactList();
        ContactPersonTableModel tableModel = (ContactPersonTableModel)this.tbl_contactPerson.getModel();
        ArrayList<Integer> enableList = tableModel.getEnableList();
        String subject = this.textField_subject.getText();
        String mailHeader = this.textField_prefix.getText();
        String mailBody = this.textArea_mailBody.getText();
        if(enableList.size() > 0){
            Contact c = map.get(map.keySet().toArray()[enableList.get(0)]);
            if(0 == this.combox_appellation.getSelectedIndex()){
                mailHeader += " "+c.getFirstName()+" ,";
            }else {
                mailHeader += " "+c.getLastName()+" ,";
            }
            mailHeader += System.getProperty("line.separator");
        }
        
        final String mailTxt = mailHeader + mailBody;
        System.out.println(mailTxt);
        new MailPreview(mailTxt).setVisible(true);
    }//GEN-LAST:event_btn_previewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailSenderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailSenderFrame().setVisible(true);
            }
        });
    }
    private JPopupMenu popupMenu;
    private JMenuItem popUpAddEntry;
    private JMenuItem popUpDelEntry;
    private ContactList contactList;
    private LoginUserInfo loginUser;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_preview;
    private javax.swing.JButton btn_sendMail;
    private javax.swing.JComboBox<String> combox_appellation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable tbl_contactPerson;
    private javax.swing.JTextArea textArea_logs;
    private javax.swing.JTextArea textArea_mailBody;
    private javax.swing.JTextField textField_prefix;
    private javax.swing.JTextField textField_subject;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {

    }

    @Override
    public void mousePressed(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON3) {
            popupMenu.show(this, e.getX(), e.getY());
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(popUpAddEntry)){
            ContactEditor ce = new ContactEditor(this);
            ce.setVisible(true);
        } else if(e.getSource().equals(popUpDelEntry)){
            int selectRow = this.tbl_contactPerson.getSelectedRow();
            String firstName = this.tbl_contactPerson.getValueAt(selectRow, 0).toString();
            String lastName =  this.tbl_contactPerson.getValueAt(selectRow, 1).toString();
            String title =  this.tbl_contactPerson.getValueAt(selectRow, 2).toString();
            String email =  this.tbl_contactPerson.getValueAt(selectRow, 3).toString();
            removeContact(new Contact(firstName,lastName,title,email));
        }
    }

    public void addContact(Contact c){
        contactList.addContact(c);
        this.tbl_contactPerson.updateUI();
    }
    private void removeContact(Contact c){
        contactList.removeContact(c);
        this.tbl_contactPerson.updateUI();
    }
}
